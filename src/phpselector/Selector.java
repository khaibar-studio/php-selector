/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package phpselector;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import javax.swing.JOptionPane;

/**
 *
 * @author muflih
 */
public class Selector extends javax.swing.JFrame {

    /**
     * Creates new form Selector
     */
    public Selector() {
        initComponents();
         Toolkit toolkit = Toolkit.getDefaultToolkit();

        // Get the screen size
        Dimension screenSize = toolkit.getScreenSize();

        int screenWidth = (int) screenSize.getWidth();
        int screenHeight = (int) screenSize.getHeight();
        Dimension frameSize = this.getSize();
        int x = (screenWidth - frameSize.width) / 2;
        int y = (screenHeight - frameSize.height) / 2;
        this.setLocation(x, y);
        if (!Data.get("default").trim().equals("")) {
            String def = Data.get("default");
            switch (def) {
                case "74":
                    php74.setSelected(true);
                    break;
                case "80":
                    php80.setSelected(true);
                    break;
                case "81":
                    php81.setSelected(true);
                    break;
                case "82":
                    php82.setSelected(true);
                    break;
                case "83":
                    php83.setSelected(true);
                    break;
            }
        }
        if (!Data.get("php_74").trim().equals("")) {
            php74.setEnabled(true);
        } else {
            php74.setEnabled(false);
        }
        if (!Data.get("php_80").trim().equals("")) {
            php80.setEnabled(true);
        } else {
            php80.setEnabled(false);
        }
        if (!Data.get("php_81").trim().equals("")) {
            php81.setEnabled(true);
        } else {
            php81.setEnabled(false);
        }
        if (!Data.get("php_82").trim().equals("")) {
            php82.setEnabled(true);
        } else {
            php82.setEnabled(false);
        }
        if (!Data.get("php_83").trim().equals("")) {
            php83.setEnabled(true);
        } else {
            php83.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        php74 = new javax.swing.JToggleButton();
        php80 = new javax.swing.JToggleButton();
        php81 = new javax.swing.JToggleButton();
        php82 = new javax.swing.JToggleButton();
        php83 = new javax.swing.JToggleButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Default PHP Version");

        php74.setText("PHP 7.4");
        php74.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                php74ActionPerformed(evt);
            }
        });

        php80.setText("PHP 8.0");
        php80.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                php80ActionPerformed(evt);
            }
        });

        php81.setText("PHP 8.1");
        php81.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                php81ActionPerformed(evt);
            }
        });

        php82.setText("PHP 8.2");
        php82.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                php82ActionPerformed(evt);
            }
        });

        php83.setText("PHP 8.3");
        php83.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                php83ActionPerformed(evt);
            }
        });

        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Config");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(php74, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(php80, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(php81, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(php82, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(php83, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton2, jLabel1, php74, php80, php81, php82, php83});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(php74)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(php80)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(php81)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(php82)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(php83)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void php74ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_php74ActionPerformed
        clear();
        php74.setSelected(true);
        setVersion("74");
    }//GEN-LAST:event_php74ActionPerformed

    private void php80ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_php80ActionPerformed
        clear();
        php80.setSelected(true);
        setVersion("80");
    }//GEN-LAST:event_php80ActionPerformed

    private void php81ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_php81ActionPerformed
        clear();
        php81.setSelected(true);
        setVersion("81");
    }//GEN-LAST:event_php81ActionPerformed

    private void php82ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_php82ActionPerformed
        clear();
        php82.setSelected(true);
        setVersion("82");
    }//GEN-LAST:event_php82ActionPerformed

    private void php83ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_php83ActionPerformed
        clear();
        php83.setSelected(true);
        setVersion("83");
    }//GEN-LAST:event_php83ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        new Config().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Selector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Selector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Selector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Selector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Selector().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToggleButton php74;
    private javax.swing.JToggleButton php80;
    private javax.swing.JToggleButton php81;
    private javax.swing.JToggleButton php82;
    private javax.swing.JToggleButton php83;
    // End of variables declaration//GEN-END:variables
    private void clear() {
        php74.setSelected(false);
        php80.setSelected(false);
        php81.setSelected(false);
        php82.setSelected(false);
        php83.setSelected(false);
    }

    private void setVersion(String version) {
        checkConfig(version);
        setDefault(version);
    }

    private void checkConfig(String version) {
        String data = Data.get("php_" + version);
        if (data.trim().equals("")) {
            JOptionPane.showMessageDialog(this, version + " path is not configured");
            new Config().setVisible(true);
        }
    }

    private void setDefault(String version) {
        String originalFilePath = Data.get("php_" + version);
        String symbolicLinkPath = Data.get("php_default");
        
        System.out.println(originalFilePath);
        System.out.println(symbolicLinkPath);

        // Command to create symbolic link
        String[] command = {"ln", "-s", originalFilePath, symbolicLinkPath};
        Path path = Paths.get(symbolicLinkPath);

        try {
            Files.delete(path);
        } catch (IOException e) {
        }
        try {
            // Create process builder
            ProcessBuilder pb = new ProcessBuilder(command);

            // Start the process
            Process process = pb.start();

            // Wait for the process to finish
            int exitCode = process.waitFor();

            // Check the exit code
            if (exitCode == 0) {
                System.out.println("Symbolic link created successfully.");
            } else {
                System.out.println("Failed to create symbolic link." + exitCode);
            }
            Data.save("default", version);
        } catch (IOException | InterruptedException e) {
            System.out.println(e.getMessage() + "======");
            e.printStackTrace();
        }
    }
}
